#!/bin/sh

config="$HOME/.config/logtime"
test -d "$config" || mkdir -p "$config"
USAGE="Usage: $(basename $0) b|e|s|--edit|-l [OPTIONS] [FILE [MESSAGE]]"
log_check='calctime --status -i'

check_status_vs() {
    new_status="$1"
    if test -e "$outfile"; then
        old_status="$($log_check "$outfile")"
        test $? -eq 0 ||\
          die $? "$0: couldn't check status - $log_check died with status $?"
    else
        old_status="out"                  # new file, no need to check
    fi
    test $new_status != $old_status
    return $?
}
    
die() {
    status="$1"
    shift
    warn $@
    exit "$status"
}

list_files() {
    ls -1 "$config/"
    return $?
}

warn() {
    echo $@ 1>&2
}

while [ $# -gt 0 ]; do
    case "$1" in
      b*)
        clock="in"
        break
        ;;
      e*)
        clock="out"
        break
        ;;
      s*)
        switch=1
        clock="out"
        break
        ;;
      --edit)
        edit=1
        break
        ;;
      -l)
        list_files
        exit $?
        ;;
      *)
        die 1 "$USAGE: command $1 not recognized"
        ;;
    esac
done

shift 1

while [ $# -gt 0 ]; do
    case "$1" in
      -f)
        force=1
        shift 1
        ;;
      -o)
        outfile="$2"
        shift 2
        break
        ;;
      -*)
        die 1 "$0: flag $1 not recognized"
        ;;
      *)
        break
        ;;
    esac
done

if [ -z "$outfile" ]; then
    test $# -gt 0 || die 1 $USAGE "Must specify FILE"
    outfile="$config/$1"
    shift
fi

if [ "$edit" ]; then
    $VISUAL "$outfile"
    exit $?
fi

test -n "$clock" || die 1 $USAGE "clocking in or out?"

if test ! "$force" ; then
    check_status_vs "$clock" ||\
      die $? "$0: trying to clock $clock with $outfile, already clocked $clock"
fi

echo "$(date '+%Y-%m-%d %I:%M %p')" $comment >>"$outfile"

if test $clock = "out"; then
    echo "--------------------" >>"$outfile"
fi

test -n "$switch" && exec $0 b "$@"
